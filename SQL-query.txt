5.1 Total Visits, Pageviews, Transactions, and Revenue (January–March 2017)
Query: Calculate key metrics such as total visits, pageviews, transactions, and revenue for the first quarter of 2017.

SELECT
   EXTRACT(MONTH FROM PARSE_DATE("%Y%m%d",date)) month,
   SUM(totals.visits) visits,
   SUM(totals.pageviews) pagesviews,
   SUM(totals.transactions) transactions,
   ROUND(SUM(totals.totalTransactionRevenue)/POW(10,6),2) revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
WHERE _table_suffix between "0101" AND "0331"
GROUP BY month
---------------------------------------------------------------------------------------
5.2 Bounce Rate by Traffic Source (July 2017)
Query: Calculate the bounce rate for each traffic source during July 2017.

SELECT
   trafficSource.source,
   SUM(totals.visits) visits,
   SUM(totals.bounces) total_bounces,
   ROUND(SUM(totals.bounces)/ SUM(totals.visits)*100, 2) bounce_rate
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
GROUP BY trafficSource.source
ORDER BY visits DESC
---------------------------------------------------------------------------------------
5.3 Revenue by Traffic Source (Weekly and Monthly) in June 2017
Query: Analyze revenue generated by different traffic sources at weekly and monthly levels for June 2017.

WITH get_revenue_monthly AS 
(
   SELECT
      CASE WHEN 1=1 THEN "MONTH" END AS type, 
      trafficSource.source,
      CASE WHEN 1=1 THEN "2017M06" END AS time,
      SUM(totals.transactionRevenue)/POW(10,6) revenue
   FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`
   GROUP BY trafficSource.source
),

get_revenue_weekly AS 
(
   SELECT
      CASE WHEN 1=1 THEN "WEEK" END AS type, 
      trafficSource.source,
      FORMAT_DATE("%YW%V", PARSE_DATE("%Y%m%d", date)) AS time,
   SUM(totals.transactionRevenue)/POW(10,6) revenue
   FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`
   GROUP BY trafficSource.source, time
)

SELECT *
FROM get_revenue_monthly 
UNION ALL 
SELECT *
FROM get_revenue_weekly
ORDER BY revenue DESC
---------------------------------------------------------------------------------------
5.4 Average Number of Pageviews by Purchaser Type
Query: Determine the average number of pageviews segmented by purchaser type.

WITH purchaser_data AS (
  SELECT
    DISTINCT fullVisitorId,
    totals.pageviews,
    CASE
      WHEN totals.transactions > 0 THEN 'purchaser'
      ELSE 'non_purchaser'
    END AS purchaser_type
  FROM
    `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
  WHERE
    _TABLE_SUFFIX BETWEEN '0101' AND '1231'
)

SELECT
  purchaser_type,
  AVG(pageviews) AS avg_pageviews
FROM
  purchaser_data
GROUP BY
  purchaser_type
---------------------------------------------------------------------------------------
5.5 Average Number of Transactions per User (July 2017)
Query: Calculate the average number of transactions per user who made a purchase in July 2017.

WITH get_info_july AS (
  SELECT
    CASE WHEN 1 = 1 THEN "201707" END AS time,
    COUNT(DISTINCT fullVisitorId) AS No_User,
    SUM(CASE WHEN totals.transactions > 0 THEN totals.transactions ELSE 0 END) AS transactions
  FROM
    `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
)

SELECT 
  ROUND(transactions / No_User, 2) AS avg_transactions_per_user
FROM get_info_july;
---------------------------------------------------------------------------------------
5.6 Average Money Spent Per Session (2017)
Query: Calculate the average revenue generated per session, including only sessions with purchases in 2017.

SELECT
    FORMAT_DATE("%Y%m", PARSE_DATE('%Y%m%d', date)) as Month,
    ROUND(SUM(totals.totalTransactionRevenue) / COUNT(*) / POW(10,6), 2) AS avg_revenue_per_session
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
WHERE totals.transactions > 0  -- Filter for sessions with transactions
GROUP BY Month
ORDER BY Month
---------------------------------------------------------------------------------------
5.7 Products Purchased Alongside “YouTube Men’s Vintage Henley” (July 2017)
Query: Identify other products purchased by customers who bought the product “YouTube Men’s Vintage Henley” during July 2017.

WITH customer_id_purchased_VH AS
(
   SELECT 
     DISTINCT fullVisitorId as customer_purchased_VH
   FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`,
   UNNEST(hits) AS hits,
   UNNEST(hits.product) AS product
   WHERE product.v2ProductName = "YouTube Men's Vintage Henley"
     AND product.productRevenue IS NOT NULL
)

SELECT 
  product.v2ProductName as Name, 
  SUM(product.productQuantity) as Amount
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*` A 
  RIGHT JOIN customer_id_purchased_VH B 
    ON A.fullVisitorId=B.customer_purchased_VH,
UNNEST(hits) AS hits,
UNNEST(hits.product) AS product
WHERE A.fullVisitorId = B.customer_purchased_VH 
  AND product.v2ProductName <> "YouTube Men's Vintage Henley"
  AND product.productRevenue IS NOT NULL
GROUP BY product.v2ProductName
ORDER BY Amount DESC
---------------------------------------------------------------------------------------
5.8 Cohort Analysis: Product Views to Add-to-Cart Conversion
Query: Create a cohort map to calculate the conversion rate from product views to add-to-cart actions.

WITH productview AS (
  SELECT
      FORMAT_DATE("%Y%m", PARSE_DATE('%Y%m%d', date)) AS month,
      COUNT(eCommerceAction.action_type) AS num_product_view
  FROM
      `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`,
      UNNEST (hits) AS hits
  WHERE
      _table_suffix BETWEEN '0101' AND '0331'
      AND eCommerceAction.action_type = '1' 
  GROUP BY
      month
),
addtocart AS (
  SELECT
      FORMAT_DATE("%Y%m", PARSE_DATE('%Y%m%d', date)) AS month,
      COUNT(eCommerceAction.action_type) AS num_addtocart
  FROM
      `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`,
      UNNEST (hits) AS hits
  WHERE
      _table_suffix BETWEEN '0101' AND '0331'
      AND eCommerceAction.action_type = '2' 
  GROUP BY
      month
),
purchase AS (
  SELECT
      FORMAT_DATE("%Y%m", PARSE_DATE('%Y%m%d', date)) AS month,
      COUNT(eCommerceAction.action_type) AS num_purchase
  FROM
      `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`,
      UNNEST (hits) AS hits
  WHERE
      _table_suffix BETWEEN '0101' AND '0331'
      AND eCommerceAction.action_type = '6' 
  GROUP BY
      month
)
SELECT
  month,
  num_product_view,
  num_addtocart,
  num_purchase,
  ROUND(SAFE_DIVIDE(num_addtocart, num_product_view) * 100, 2) AS add_to_cart_rate,
  ROUND(SAFE_DIVIDE(num_purchase, num_product_view) * 100, 2) AS purchase_rate
FROM productview
JOIN addtocart USING (month)
JOIN purchase USING (month)
ORDER BY month
---------------------------------------------------------------------------------------